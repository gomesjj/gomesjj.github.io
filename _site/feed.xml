<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.0.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2016-05-16T19:07:23+01:00</updated><id>/</id><title>DEV | TTY</title><subtitle>The personal blog of Jose Gomes</subtitle><author><name>Jose Gomes</name></author><entry><title>Want a USB Ethernet driver for ESXi? You can have two.</title><link href="/homelab/Want-a-USB-Ethernet-driver-for-ESXi-You-can-have-two/" rel="alternate" type="text/html" title="Want a USB Ethernet driver for ESXi? You can have two." /><published>2016-05-14T00:00:00+01:00</published><updated>2016-05-14T00:00:00+01:00</updated><id>/homelab/Want-a-USB-Ethernet-driver-for-ESXi-You-can-have-two</id><content type="html" xml:base="/homelab/Want-a-USB-Ethernet-driver-for-ESXi-You-can-have-two/">&lt;p&gt;Ah, that mythical home lab beast: a working USB Ethernet driver for ESXi. You wait and wait for one, and then two come along…&lt;/p&gt;

&lt;aside class=&quot;sidebar__right&quot;&gt;
&lt;nav class=&quot;toc&quot;&gt;
    &lt;header&gt;&lt;h4 class=&quot;nav__title&quot;&gt;&lt;i class=&quot;fa fa-file-text&quot;&gt;&lt;/i&gt; On This Page&lt;/h4&gt;&lt;/header&gt;
&lt;ul class=&quot;toc__menu&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#first-of-all&quot; id=&quot;markdown-toc-first-of-all&quot;&gt;First of all&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-story&quot; id=&quot;markdown-toc-the-story&quot;&gt;The story&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tested-devices&quot; id=&quot;markdown-toc-tested-devices&quot;&gt;Tested devices&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#asix&quot; id=&quot;markdown-toc-asix&quot;&gt;ASIX&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#realtek&quot; id=&quot;markdown-toc-realtek&quot;&gt;Realtek&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#performance&quot; id=&quot;markdown-toc-performance&quot;&gt;Performance&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#iperf-figures-for-the-asix-driver&quot; id=&quot;markdown-toc-iperf-figures-for-the-asix-driver&quot;&gt;iPerf figures for the ASIX driver&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#iperf-figures-for-the-realtek-driver&quot; id=&quot;markdown-toc-iperf-figures-for-the-realtek-driver&quot;&gt;iPerf figures for the Realtek driver&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#device-details&quot; id=&quot;markdown-toc-device-details&quot;&gt;Device details&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#esxi-quirks&quot; id=&quot;markdown-toc-esxi-quirks&quot;&gt;ESXi quirks&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#stacks&quot; id=&quot;markdown-toc-stacks&quot;&gt;Stacks&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#the-neighbourhood&quot; id=&quot;markdown-toc-the-neighbourhood&quot;&gt;The neighbourhood&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#compiling-the-drivers&quot; id=&quot;markdown-toc-compiling-the-drivers&quot;&gt;Compiling the drivers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tldr---just-gimme-the-driver&quot; id=&quot;markdown-toc-tldr---just-gimme-the-driver&quot;&gt;TL;DR - Just gimme the driver&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#asix-1&quot; id=&quot;markdown-toc-asix-1&quot;&gt;ASIX&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#esxi-60&quot; id=&quot;markdown-toc-esxi-60&quot;&gt;ESXi 6.0&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#esxi-55&quot; id=&quot;markdown-toc-esxi-55&quot;&gt;ESXi 5.5&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#esxi-51&quot; id=&quot;markdown-toc-esxi-51&quot;&gt;ESXi 5.1&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#realtek-1&quot; id=&quot;markdown-toc-realtek-1&quot;&gt;Realtek&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#esxi-60-1&quot; id=&quot;markdown-toc-esxi-60-1&quot;&gt;ESXi 6.0&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#esxi-55-1&quot; id=&quot;markdown-toc-esxi-55-1&quot;&gt;ESXi 5.5&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#esxi-51-1&quot; id=&quot;markdown-toc-esxi-51-1&quot;&gt;ESXi 5.1&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/nav&gt;
&lt;/aside&gt;

&lt;h2 id=&quot;first-of-all&quot;&gt;First of all&lt;/h2&gt;

&lt;p&gt;I would like to acknowledge the help all the people mentioned on this post, knowingly or otherwise, provided me. Their efforts inspired me to try my hand at this.&lt;/p&gt;

&lt;p&gt;In particular, I would like to thank William Lam (tip o’ the hat to you, Sir), as without his help things would be very different. It was William who provided the solution that allows automatic load of the modules at boot and persistence of the network configuration across reboots. If you have a chance, stop by &lt;a href=&quot;http://www.virtuallyghetto.com&quot;&gt;virtuallyGhetto&lt;/a&gt; and show you appreciation.&lt;/p&gt;

&lt;h2 id=&quot;the-story&quot;&gt;The story&lt;/h2&gt;

&lt;p&gt;If, like myself, you run an ESXi lab based on the Intel NUC, you might have looked at options to add a second Ethernet adapter. For the 3&lt;sup&gt;rd&lt;/sup&gt; Generation NUC I solved the problem with my &lt;a href=&quot;/Homelab/NUC-Squarepants/&quot;&gt;NUC Squarepants&lt;/a&gt; contraption, but was yet to find a good solution for later generations NUCs. That is, until I came across a great post by William Lam called &lt;a href=&quot;http://www.virtuallyghetto.com/2016/03/working-usb-ethernet-adapter-nic-for-esxi.html&quot;&gt;“Working USB Ethernet Adapter (NIC) for ESXi”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can read the full details on William’s blog, but the gist is that he was trying to resurrect a custom compiled driver that had been posted to the forum at vm-help.com back in 2013. That driver had been successfully compiled and worked fine on ESXi 5.1, but not on 5.5 or 6.0. By the time I came across William’s article, he was looking at ways to compile a new version of the driver targeted at later ESXi releases.&lt;/p&gt;

&lt;p&gt;My interest was piqued and the question was: could I get it working myself? I decided to have a go, so I spent some time reading the original forum thread to get a feel for what lay ahead. I am by no means a programmer, but I do from time to time write some code. The challenge was set…&lt;/p&gt;

&lt;p&gt;The one thing I didn’t like about the original driver William had found was the fact that it also needed a modified version of the &lt;code class=&quot;highlighter-rouge&quot;&gt;usbnet&lt;/code&gt; module. I just thought that interfering with the native modules was a step too far, so wanted to avoid that.&lt;/p&gt;

&lt;p&gt;Anyway, to cut a long story short, I got the ASIX 88179_178a driver compiled and running on both ESXi 5.5 and 6.0. Funnily enough, by the time I contacted William about my success he had also got the driver built, and both &lt;a href=&quot;https://github.com/lamw/ax88179_178a-esxi&quot;&gt;his&lt;/a&gt; and &lt;a href=&quot;https://github.com/gomesjj/ax88179_178a&quot;&gt;my&lt;/a&gt; changes to the Linux source code were pretty much the same. Eventually I also got the driver compiled for ESXi 5.1, which took longer due to a puzzling DMA mask error when connected to USB 2.0 ports. It is resolved now, but bear in mind that the bandwidth limitation on USB 2.0 (there is no support for xHCI on ESXi 5.1) means that the adapter will never achieve Gigabit speeds.&lt;/p&gt;

&lt;p&gt;So, that is it? What about the second driver I implied at above? Well, that will be the driver for USB Ethernet adapters based on the Realtek RTL8153/RTL8152 chipset (r8152 driver) that I also got working. You see, once I got the first driver going I got the taste for it and had to have a go at another. The source code for this driver is also on &lt;a href=&quot;https://github.com/gomesjj/r8152&quot;&gt;GitHub&lt;/a&gt;. This second driver also works on ESXi 6.0, 5.5 and 5.1, with the adapter plugged in to either a USB 3.0 or USB 2.0 port (note the bandwidth limitation I mentioned above). Also,  the Realtek driver is slightly faster than the ASIX one.&lt;/p&gt;

&lt;h2 id=&quot;tested-devices&quot;&gt;Tested devices&lt;/h2&gt;

&lt;p&gt;The following devices were tested with these drivers.&lt;/p&gt;

&lt;h3 id=&quot;asix&quot;&gt;ASIX&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.co.uk/gp/product/B0095EFXMC/ref=oh_aui_detailpage_o04_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;StarTech USB 3.0 to RJ45 Ethernet LAN 10/100/100 Network Adapter&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.co.uk/gp/product/B00D8XTOD0/ref=oh_aui_detailpage_o03_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;StarTech USB 3.0 to Dual Port Gigabit Ethernet Adapter NIC with USB Port&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.co.uk/gp/product/B00AQM8586/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Plugable USB 3.0 to 10/100/1000 Gigabit Ethernet LAN Network Adapter&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;realtek&quot;&gt;Realtek&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.co.uk/Anker-AK-A7611011-USB-1000Mbit-networking/dp/B00PC0P2DI?ie=UTF8&amp;amp;*Version*=1&amp;amp;*entries*=0&quot;&gt;ANKER Aluminum USB 3.0 to Ethernet Adapter&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.co.uk/dp/B00NPJP33M/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=569136327&amp;amp;pf_rd_s=lpo-top-stripe&amp;amp;pf_rd_t=201&amp;amp;pf_rd_i=B00DNU8Y20&amp;amp;pf_rd_m=A3P5ROKL5A1OLE&amp;amp;pf_rd_r=C5N2DD7H2D7AVRXM1VHP&quot;&gt;ANKER USB 3.0 to RJ45 Gigabit Ethernet Adapter&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have not tested it, but other devices based on the same chipset should work, such as the &lt;a href=&quot;https://www.amazon.co.uk/gp/product/B00YOKMKE6/ref=pe_1959711_130662621_em_1p_0_ti&quot;&gt;TP-LINK UE300&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;performance&quot;&gt;Performance&lt;/h2&gt;

&lt;p&gt;I have been testing the drivers for almost two months now and performance has been rock solid, and on a par with the onboard Intel adapter or the Realtek Mini PCIe adapter I use on the &lt;a href=&quot;/NUC-Squarepants&quot;&gt;NUC Squarepants&lt;/a&gt;. I had a few hiccups to start with, and that is detailed under the &lt;a href=&quot;#esxi-quirks&quot;&gt;ESXi quirks&lt;/a&gt; section below.&lt;/p&gt;

&lt;h3 id=&quot;iperf-figures-for-the-asix-driver&quot;&gt;iPerf figures for the ASIX driver&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/usb/iperf_asix.png&quot; alt=&quot;ASIX 88179_178a&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;iperf-figures-for-the-realtek-driver&quot;&gt;iPerf figures for the Realtek driver&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/usb/iperf_rtl.png&quot; alt=&quot;RTL8153&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using iPerf alone is not a reliable way of measuring throughput, but it gives a good indication. I have, however, performed many vMotion operations to get better “real world” figures. For example, migrating a VM assigned 8 GB of RAM (VCSA), host only, takes ~4 seconds; migration to another host and datastore (iSCSI to internal disk) around ~4 minutes. Those figures are pretty much identical to what I see when the same operations are performed using the onboard Intel adapter.&lt;/p&gt;

&lt;h2 id=&quot;device-details&quot;&gt;Device details&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/usb/lsnics.png&quot; alt=&quot;lsnics&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As can be seen above both devices show up as “Pseudo” devices, but have very different names. The reason for that is that the Realtek driver is CDC-Ether compliant, whereas the ASIX driver is not. One approach is no better than the other, though.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ASIX&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/usb/asix_getnic.png&quot; alt=&quot;getnic&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/usb/asix_ethtool.png&quot; alt=&quot;getnic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Realtek&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/usb/rtl_getnic.png&quot; alt=&quot;getnic&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/usb/rtl_ethtool.png&quot; alt=&quot;getnic&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;esxi-quirks&quot;&gt;ESXi quirks&lt;/h2&gt;

&lt;h3 id=&quot;stacks&quot;&gt;Stacks&lt;/h3&gt;

&lt;p&gt;As you can imagine I was very happy that I managed to get the ASIX driver working, but I noticed from the beginning that whilst egress (TX) throughput was in line with gigabit speed, ingress (RX) was at least 300 Mbits/sec less. I exchanged a few emails with William Lam, and he was also seeing the same lower throughput (sometimes even less). I tried tweeking the code every which way to no avail, and I came to the conclusion that this was the better we could get off of those adapters. I was miffed.&lt;/p&gt;

&lt;p&gt;I started looking around the web and came across the ANKER adapter, noticing that it used a different chipset and driver. Emboldened by my success with the ASIX driver I turned my hand to the newly discovered Realtek driver. A few days later I had the driver compiled and working on ESXi 6.0, 5.5 and 5.1. Woo-hoo!&lt;/p&gt;

&lt;p&gt;Another round of iPerf tests revealed the exact same lower RX throughput with the new adapter (what?). Next, I moved the adapters around: the builtin NIC (vmnic0) was moved to vSwitch1 (iSCSI) and the USB adapter moved to vSwitch0. I had baseline test results for the Intel adapter, so I knew the throughput was the same for TX and RX. When I performed the same iPerf test again, this time with the Intel NIC on the other vSwitch, the RX throughput was lower too, as seen with the USB adapters…&lt;/p&gt;

&lt;p&gt;What could be causing this? The only thing I could think of was the fact that on vSwitch1 the ethernet traffic was tagged. Shirley that couldn’t be the reason? And it wasn’t – it was routing. I have a Cisco SG300 running on Layer 3 mode (router) and it will happily do inter-VLAN routing, no problem. The difference on ESXi is that with the single TCP/IP stack design there is only the default gateway, and a different gateway cannot be assigned to interfaces on different VLANs (unlike most other sensible operating systems). Traffic was hitting the default gateway (VLAN 100), then being re-routed to the ISCSI VLAN (10). That worked fine on egress, but the return trip, bouncing from VLAN to VLAN, was killing the speed.&lt;/p&gt;

&lt;p&gt;I dully created a custom TCP/IP stack for VLAN 10, which enabled me to then assign another gateway, as well as appropriate static routes. That immediately resolved the issue; but then I could not bind the vNIC anymore to the iSCSI adapter. Is the Custom TCP/IP Stack feature on ESXi actually working? Answers on a post card, please.&lt;/p&gt;

&lt;h3 id=&quot;the-neighbourhood&quot;&gt;The neighbourhood&lt;/h3&gt;

&lt;p&gt;I had kind of resolved the first issue, so I went on to test the speed of the USB adapter again. Remember that it was now on vSwitch0, home of the default gateway, so I was expecting everything to be fine. Egress, as always, fine; then I tried the other way around and… Boom! The speed was down on the floor, just unusable (double “what?”).&lt;/p&gt;

&lt;p&gt;It was so bad that I could not even keep the SSH sessions open anymore. Pinging the server resulted in multiple packets dropped, with the occasional response coming trough. Time to bring around the bloodhound (Wireshark) to see what was going on. I could not see packets hiting the interface at all – they were actually hitting the other interface on the server (treble “What?”)&lt;/p&gt;

&lt;p&gt;Time to look at the ARP table from another server:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;esxcli network ip neighbor list
Neighbor        Mac Address        Vmknic    Expiry  State  Type
--------------  -----------------  ------  --------  -----  -------
192.168.10.132  0c:c4:7a:a9:55:89  vmk1     873 sec         Unknown
&lt;span class=&quot;gp&quot;&gt;--&amp;gt; &lt;/span&gt;192.168.10.226   3c:97:0e:5e:a1:bd  vmk1    1190 sec         Unknown &amp;lt;--
192.168.10.232  d0:50:99:c0:ae:8f  vmk1     919 sec         Unknown
192.168.1.234   00:0c:29:97:66:3a  vmk0    1162 sec         Unknown
&lt;span class=&quot;gp&quot;&gt;--&amp;gt; &lt;/span&gt;192.168.1.226   3c:97:0e:5e:a1:bd  vmk0    1181 sec         Unknown &amp;lt;--
192.168.1.223   00:0c:29:13:d3:03  vmk0    1143 sec         Unknown
192.168.1.254   7c:69:f6:9a:c9:d0  vmk0     649 sec         Unknown
192.168.1.222   c0:3f:d5:64:ae:5d  vmk0    1130 sec         Unknown
192.168.1.240   14:b1:c8:00:37:80  vmk0    1173 sec         Unknown
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can clearly see two different IP addresses linked to the same MAC address. Well, I thought, let’s try clearing the ARP cache.&lt;/p&gt;

&lt;p&gt;On the other ESXi servers:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;esxcli network ip neighbor remove --version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4 --neighbor-addr&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.226
esxcli network ip neighbor remove --version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4 --neighbor-addr&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.220
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And on my own machine:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo arp -a -d
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Ping the server again with &lt;code class=&quot;highlighter-rouge&quot;&gt;arping&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;arping -S 192.168.1.240 -i en8 192.168.1.226
ARPING 192.168.1.226
60 bytes from 00:50:56:67:91:a9 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.1.226&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;318.050 usec
60 bytes from 00:50:56:67:91:a9 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.1.226&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;318.050 usec
60 bytes from 00:50:56:67:91:a9 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.1.226&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;276.089 usec
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;That is more like it!&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;During development of the driver, I had loaded and unloaded the module whilst tailing the vmkernel.log so many times that I had memorised the MAC address. I knew that was the correct one.&lt;/p&gt;

&lt;p&gt;Then I try to SSH to the server again, and nothing. Look at the ARP table, and the IP address is yet again listed against the wrong MAC address. What is going on here?&lt;/p&gt;

&lt;p&gt;It was time for some search-fu to be applied. Hit the webs, and got this: &lt;a href=&quot;https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=1031111&quot;&gt;vmk0 management network MAC address is not updated when NIC card is replaced or vmkernel has duplicate MAC address (1031111)&lt;/a&gt;, which included this gem:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The MAC address of vmk0 management network may not get updated after you replace or assign a new MAC address to the NIC and run the esxcfg-vmknic –l command from the command line. The default setting for the ESXi host is not to select the new hardware MAC address.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The proposed solution? Delete and recreate the &lt;code class=&quot;highlighter-rouge&quot;&gt;vmknic&lt;/code&gt;. Not what I wanted to read, as I was going to be swapping the adapters around many times to complete my tests. But wait, there is a workaround:&lt;/p&gt;

&lt;div class=&quot;notice--warning&quot;&gt;
&lt;p&gt;&lt;b&gt;Workaround&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To work around the issue, manually configure the MAC address on the ESXi host:&lt;/p&gt;
&lt;p style=&quot;margin-left: 40px&quot;&gt;1. In the troubleshooting console, run the command:&lt;/p&gt;
	&lt;p style=&quot;margin-left:60px&quot;&gt;esxcfg-advcfg -s 1 /Net/FollowHardwareMac&lt;/p&gt;
&lt;p style=&quot;margin-left: 40px&quot;&gt; 2. Restart the ESXi server.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;After applying the workaround I was then able to move the physical adapters freely between &lt;code class=&quot;highlighter-rouge&quot;&gt;vmknics&lt;/code&gt; and the MAC address changed as expected.&lt;/p&gt;

&lt;p&gt;I understand that moving physical adapters around is not something that would be done regularly, but I would have preferred if the “workaround” was actually the default behaviour. Having said that, I changed stuff around, changed ESXi versions, and moved adapters so many times on that server that I am surprised I did’t hit any other problems…&lt;/p&gt;

&lt;h2 id=&quot;compiling-the-drivers&quot;&gt;Compiling the drivers&lt;/h2&gt;

&lt;p&gt;I will not elaborate on how to compile the drivers here. If you are interested, I have some reasonably detailed steps and also build scripts accompanying the source code on GitHub:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Repository for the &lt;a href=&quot;https://github.com/gomesjj/ax88179_178a&quot;&gt;ASIX ax88179_178a&lt;/a&gt; driver.&lt;/li&gt;
  &lt;li&gt;Repository for the &lt;a href=&quot;https://github.com/gomesjj/r8152&quot;&gt;Realtek r8152&lt;/a&gt; driver.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tldr---just-gimme-the-driver&quot;&gt;TL;DR - Just gimme the driver&lt;/h2&gt;

&lt;p&gt;OK, OK. You are impatient…&lt;/p&gt;

&lt;p&gt;You can download the VIBs using the following links:&lt;/p&gt;

&lt;h3 id=&quot;asix-1&quot;&gt;ASIX&lt;/h3&gt;

&lt;h4 id=&quot;esxi-60&quot;&gt;ESXi 6.0&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/gomesjj/VIBs/download_file?file_path=ESXi60%2Fax88179-1.14.0-1-esxi60u2.vib&quot;&gt;ax88179-1.14.0-1-esxi60u2.vib&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;esxi-55&quot;&gt;ESXi 5.5&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/gomesjj/VIBs/download_file?file_path=ESXi55%2Fax88179-1.14.0-1-esxi55u3.vib&quot;&gt;ax88179-1.14.0-1-esxi55u3.vib&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;esxi-51&quot;&gt;ESXi 5.1&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/gomesjj/VIBs/download_file?file_path=ESXi51%2Fax88179-1.14.0-1-esxi51u3.vib&quot;&gt;ax88179-1.14.0-1-esxi51u3.vib&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;realtek-1&quot;&gt;Realtek&lt;/h3&gt;

&lt;h4 id=&quot;esxi-60-1&quot;&gt;ESXi 6.0&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/gomesjj/VIBs/download_file?file_path=ESXi60%2Fr8152-2.06.0-1.esxi60u2.vib&quot;&gt;r8152-2.06.0-1.esxi60u2.vib&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;esxi-55-1&quot;&gt;ESXi 5.5&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/gomesjj/VIBs/download_file?file_path=ESXi55%2Fr8152-2.06.0-1.esxi55u3.vib&quot;&gt;r8152-2.06.0-1.esxi55u3.vib&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;esxi-51-1&quot;&gt;ESXi 5.1&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/gomesjj/VIBs/download_file?file_path=ESXi51%2Fr8152-2.06.0-1.esxi51u3.vib&quot;&gt;r8152-2.06.0-1.esxi51u3.vib&lt;/a&gt;&lt;/p&gt;</content><category term="[&quot;Homelab&quot;]" /><category term="Homelab" /><category term="ESXi" /><category term="USB" /><category term="Ethernet" /><summary>Ah, that mythical home lab beast: a working USB Ethernet driver for ESXi. You wait and wait for one, and then two come along…</summary></entry><entry><title>Intel Mesh Commander on Mac OS X</title><link href="/apple/Intel_Mesh_Commander_on_Mac_OS_X/" rel="alternate" type="text/html" title="Intel Mesh Commander on Mac OS X" /><published>2016-05-12T00:00:00+01:00</published><updated>2016-05-12T00:00:00+01:00</updated><id>/apple/Intel_Mesh_Commander_on_Mac_OS_X</id><content type="html" xml:base="/apple/Intel_Mesh_Commander_on_Mac_OS_X/">&lt;p&gt;Intel Active Management Technology is one of the hardware technologies (perhaps the most recognised and representative) that is part of Intel’s &lt;a href=&quot;http://www.intel.co.uk/content/www/uk/en/architecture-and-technology/vpro/vpro-technology-general.html&quot;&gt;vPro&lt;/a&gt; offerings. AMT offers the benefits of out-of-band management similar to &lt;abbr title=&quot;Intelligent Platform Management Interface&quot;&gt;IPMI&lt;/abbr&gt;, but for personal computers as opposed to servers.&lt;/p&gt;

&lt;p&gt;When I was selecting the NUC model(s) to use for my ESXi home lab, the fact that both the &lt;a href=&quot;http://www.intel.co.uk/content/www/uk/en/nuc/nuc-kit-dc53427hye-board-d53427rke.html&quot;&gt;DC53427HYEA&lt;/a&gt; and the &lt;a href=&quot;http://www.intel.co.uk/content/www/uk/en/nuc/nuc-kit-nuc5i5ryh.html&quot;&gt;NUC5i5RYH&lt;/a&gt; sported processors with vPro and AMT support helped me sway towards them. The NUCs were replacing kit that had full &lt;abbr title=&quot;Intelligent Platform Management Interface&quot;&gt;IPMI&lt;/abbr&gt; functionality, and I knew how much I would miss the convenience of managing the new “servers” remotely.&lt;/p&gt;

&lt;p&gt;There was a little fly in the ointment though. As I researched the technology it became clear that all the management tools were Windows only. Even Linux support was almost non-existent except for some example code distributed with the AMT SDK. Bummer, I thought to myself, another “Macs need not apply” zone.&lt;/p&gt;

&lt;p&gt;I do run a Windows 7 VM on my laptop solely because of Visio (another bummer), so I resigned to the fact that the VM would just have to spin a few more times a week. That is, until I came across &lt;a href=&quot;http://www.meshcommander.com/meshcommander&quot;&gt;Mesh Commander&lt;/a&gt;. Mesh Commander is open source software developed by Intel’s Ylian Saint-Hilaire, which is distributed as a WIN64 binary or as a website served from &lt;abbr title=&quot;Internet Information Services&quot;&gt;IIS&lt;/abbr&gt; (Yuck!). Since the &lt;abbr title=&quot;Internet Information Services&quot;&gt;IIS&lt;/abbr&gt; version included the source code, I decided to download it and see if I could coerce the code to run on Apache or something else. To my surprise, in the bowels of the source code, I found an NW.js folder. That was more like it!&lt;/p&gt;

&lt;p&gt;I dabble from time to time with some coding and scripting, particularly when I want to have some piece of software running on Mac OS X; but, I had never played with NW.js (née node-webkit). If you are not familiar with NW.js, you can see what it is all about &lt;a href=&quot;http://nwjs.io&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To start with, I downloaded version 0.1.3 of Mesh Commander (it’s now at 0.2.0) and version 0.12.3 of NW.js (stable is 0.14.5 now). I must confess I had much more problems with the code than I expected, but I think it was down to NW.js. Since then I have tested with later versions and the total amount of changes to the source code is now insignificant, amounting to just a couple of Mac OS X specific GUI items.&lt;/p&gt;

&lt;p&gt;So, lets move on to the recipe.&lt;/p&gt;

&lt;h3 id=&quot;the-ingredients&quot;&gt;The Ingredients&lt;/h3&gt;

&lt;p&gt;1. Apple Developer ID&lt;/p&gt;

&lt;p&gt;You will need a valid Developer ID and signing certificate, otherwise the resulting application will not even run. The Mac Developer Program costs GBP 79 / USD 99 per year for an individual.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/programs/&quot;&gt;Apple Developer Program&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Have you had enough already and don’t want to bake anymore? You can download one that I prepared earlier, fully signed, &lt;a href=&quot;https://bintray.com/gomesjj/APPS/download_file?file_path=OSX%2FMeshCommander.dmg.zip&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;2. Xcode&lt;/p&gt;

&lt;p&gt;If you haven’t installed Xcode yet, get it from the App Store, or download from &lt;a href=&quot;https://developer.apple.com/xcode/download/&quot;&gt; Developer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Time for a cuppa of whatever rocks your boat, as it will take some time…&lt;/p&gt;

&lt;p&gt;3. Install &lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;The easiest way is by installing Homebrew first&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -e &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now, you could just install &lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;npm&lt;/code&gt; straight away, but I recommend you follow the instructions in this &lt;a href=&quot;https://johnpapa.net/how-to-use-npm-global-without-sudo-on-osx/&quot;&gt;post&lt;/a&gt; by John Papa. The instructions show how to use &lt;code class=&quot;highlighter-rouge&quot;&gt;npm global&lt;/code&gt; without the need for &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you don’t mind running code compiled by someone else, just install the &lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt; binary, which also includes &lt;code class=&quot;highlighter-rouge&quot;&gt;npm&lt;/code&gt;. Download it from &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;4. Install &lt;code class=&quot;highlighter-rouge&quot;&gt;nw-builder&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g nw-builder
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I have used both &lt;code class=&quot;highlighter-rouge&quot;&gt;nw-builder&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;nwjs-macappstore-builder&lt;/code&gt;. Whilst both of them work well, I prefer &lt;code class=&quot;highlighter-rouge&quot;&gt;nw-builder&lt;/code&gt; as it offers more control.&lt;/p&gt;

&lt;p&gt;If you would rather decide for yourself, have a look at &lt;a href=&quot;https://github.com/nwjs/nw-builder&quot;&gt;nw-builder&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/nwjs-macappstore-builder&quot;&gt;nwjs-macappstore-builder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;5. Grab the modified source files and other requisites from my GitHub &lt;a href=&quot;https://github.com/gomesjj/MeshCommander&quot;&gt;repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;lets-bake-it&quot;&gt;Lets bake it&lt;/h3&gt;

&lt;p&gt;1. Create a directory to store the files and the built application.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p ~/devel
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you downloaded the contents of my repository, just copy them over to the above created folder. You can also clone the contents directly with &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/devel
git clone https://github.com/gomesjj/MeshCommander.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You should end-up with something like this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls
MeshCommander/

ls -lR MeshCommander
total 16
-rw-r--r--  1 gj1606  staff    90B 4 May 14:00 README.md
-rwxr-xr-x  1 gj1606  staff   1.8K 4 May 14:00 mkapp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
drwxr-xr-x  5 gj1606  staff   170B 4 May 14:00 files/
drwxr-xr-x  7 gj1606  staff   238B 4 May 14:00 &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;/

MeshCommander/files:
total 88
-rw-r--r--  1 gj1606  staff   2.6K 4 May 14:00 Info.plist
-rw-r--r--  1 gj1606  staff   600B 4 May 14:00 InfoPlist.strings
-rw-r--r--  1 gj1606  staff    36K 4 May 14:00 meshcommander.icns

MeshCommander/source:
total 3504
-rw-r--r--  1 gj1606  staff   1.7M 4 May 14:00 Commander.htm
-rwxr-xr-x  1 gj1606  staff   3.6K 4 May 14:00 favicon.ico&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
-rwxr-xr-x  1 gj1606  staff   3.1K 4 May 14:00 favicon.png&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
-rw-r--r--  1 gj1606  staff   593B 4 May 14:00 package.json
-rw-r--r--  1 gj1606  staff    18K 4 May 14:00 scriptblocks.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2. Build the application&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;MeshCommander
. ./mkapp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If the build is successful you should see output similar to this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node:61321) fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.
  downloading [====================] 100% 0.0s

all done!

Copying &quot;InfoPlist.strings&quot; to &quot;en.lproj&quot; directory

Signing Application

./build/MeshCommander/osx64/MeshCommander.app/Contents/Versions/51.0.2704.47/nwjs Framework.framework/Helpers/crashpad_handler: signed Mach-O thin (x86_64) [crashpad_handler]
./build/MeshCommander/osx64/MeshCommander.app/Contents/Versions/51.0.2704.47/nwjs Framework.framework/Resources/APP_mode_loader.APP/Contents/MacOS/APP_mode_loader: signed app bundle with Mach-O thin (x86_64) [io.nwjs.nw.app.@APP_MODE_SHORTCUT_ID@]
./build/MeshCommander/osx64/MeshCommander.app/Contents/Versions/51.0.2704.47/nwjs Helper.APP/Contents/MacOS/nwjs Helper: signed app bundle with Mach-O thin (x86_64) [io.nwjs.nw.helper]
./build/MeshCommander/osx64/MeshCommander.app: signed app bundle with Mach-O thin (x86_64) [com.intel.MeshCommander]

Verifying signature

Executable=/Users/gj1606/devel/MeshCommander/build/clone/MeshCommander/build/MeshCommander/osx64/MeshCommander.app/Contents/MacOS/nwjs
Identifier=com.intel.MeshCommander
Format=app bundle with Mach-O thin (x86_64)
CodeDirectory v=20200 size=311 flags=0x0(none) hashes=3+4 location=embedded
Hash type=sha256 size=32
CandidateCDHash sha1=e3afaf1ada749b9e2617ff53c25761ec9b5125a7
CandidateCDHash sha256=b25da72bd96ab5ffbbeda9e0094846c53ea23757
Hash choices=sha1,sha256
CDHash=b25da72bd96ab5ffbbeda9e0094846c53ea23757
Signature size=8908
Authority=Developer ID Application: Jose Gomes (3JU95247N3)
Authority=Developer ID Certification Authority
Authority=Apple Root CA
Timestamp=13 May 2016, 15:22:34
Info.plist entries=28
TeamIdentifier=3JU95247N3
Sealed Resources version=2 rules=12 files=86
Internal requirements count=1 size=184


Veriyfing Gatekeeper acceptance...

./build/MeshCommander/osx64/MeshCommander.app: accepted
source=Developer ID
override=security disabled
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On first run, NW.js is downloaded and cached locally for subsequent builds:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;SNIP&amp;gt;
  downloading &lt;span class=&quot;o&quot;&gt;[====================]&lt;/span&gt; 100% 0.0s
&amp;lt;/SNIP&amp;gt;

ls cache/
0.15.0-rc2/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The packaged application will be under the &lt;strong&gt;build&lt;/strong&gt; directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls ./build/MeshCommander/osx64/
MeshCommander.app
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;look-whats-come-out-from-the-oven&quot;&gt;Look what’s come out from the oven&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesh/mesh.png&quot; alt=&quot;Start&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesh/about.png&quot; alt=&quot;About&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesh/status.png&quot; alt=&quot;Status&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesh/hw.png&quot; alt=&quot;Hardware&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mesh/rdesk.png&quot; alt=&quot;Remote&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;can-i-eat-it&quot;&gt;Can I eat it?&lt;/h3&gt;

&lt;p&gt;Yes, you can. Download the application:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bintray.com/gomesjj/APPS/download_file?file_path=OSX%2FMeshCommander.dmg.zip&quot;&gt;MeshCommander.app&lt;/a&gt;&lt;/p&gt;</content><category term="[&quot;Apple&quot;]" /><category term="Mac" /><category term="OS X" /><category term="NW.js" /><category term="Homelab" /><category term="Virtualisation" /><category term="NUC" /><summary>Intel Active Management Technology is one of the hardware technologies (perhaps the most recognised and representative) that is part of Intel’s vPro offerings. AMT offers the benefits of out-of-band management similar to IPMI, but for personal computers as opposed to servers.</summary></entry><entry><title>NUC Squarepants</title><link href="/homelab/NUC-Squarepants/" rel="alternate" type="text/html" title="NUC Squarepants" /><published>2016-05-10T00:00:00+01:00</published><updated>2016-05-10T00:00:00+01:00</updated><id>/homelab/NUC-Squarepants</id><content type="html" xml:base="/homelab/NUC-Squarepants/">&lt;p&gt;My first Intel NUC was yet to be delivered, but I was already looking around for a solution for it’s greatest shortcoming: the single Ethernet adapter. So, here is how my first attempt at solving that went.&lt;/p&gt;

&lt;p&gt;As I mentioned in my previous post about the evolution of my &lt;a href=&quot;/Intel-NUC-to-the-rescue&quot;&gt;home lab&lt;/a&gt;, I decided to test the waters with an Intel NUC &lt;a href=&quot;http://www.intel.co.uk/content/www/uk/en/nuc/nuc-kit-dc53427hye-board-d53427rke.html&quot;&gt;DC53427HYEA&lt;/a&gt;. I was as yet unsure as to whether or not the NUC would be an ESXi host, but I knew I could run Windows Server 2012 on it. If I couldn’t get a second NIC for ESXi, the NUC would still have a purpose as my new Domain Controller.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;As an aside, I chose this older NUC model, and later the &lt;a href=&quot;http://www.intel.co.uk/content/www/uk/en/nuc/nuc-kit-nuc5i5ryh.html&quot;&gt;NUC5i5RYH&lt;/a&gt;, because they are the only models in the line up to include Intel &lt;abbr title=&quot;Active Management Technology&quot;&gt;AMT&lt;/abbr&gt;. I think running with slightly older models is a price worth paying in exchange for remote out-of-band management.&lt;/p&gt;

&lt;p&gt;Well, back to our quest… I am averse to reinventing the wheel, so I started by searching for existing solutions, and found surprisingly few: this &lt;a href=&quot;http://www.virten.net/2015/09/adding-a-second-nic-to-a-5th-gen-intel-nuc-or-other-pcie-cards/&quot;&gt;Adding a second NIC to a 5th Gen Intel NUC&lt;/a&gt; by Florian Grehl, and this &lt;a href=&quot;http://blog.fosketts.net/2015/06/05/adding-a-second-ethernet-port-to-an-intel-nuc-via-mini-pcie/&quot;&gt;Adding a Second Ethernet Port to an Intel NUC via Mini PCIe&lt;/a&gt; by Stephen Foskett. Both solutions are very imaginative, but not quite what I had in mind.&lt;/p&gt;

&lt;p&gt;I didn’t like the idea of running a full length PCIe Ethernet adapter outside the NUC enclosure like Florian did. Plus, there is a need for a second 12V power adapter to drive the NIC. Ah, and I didn’t have a 5&lt;sup&gt;th&lt;/sup&gt; generation NUC as yet…&lt;/p&gt;

&lt;p&gt;Stephen’s solution was closer to what I had in mind, but not quite. Using a Mini PCIe Ethernet adapter housed inside a custom base sounded just right for my NUC model, but I din’t fancy soldering the adapter directly to the board! However, I did like the idea of a custom 3D printed base for the NUC; I thought perhaps I could combine the best aspects of each approach: a Mini PCIe Ethernet adapter connected by some sort of extender, and housed in a custom base. Sounded simple enough!&lt;/p&gt;

&lt;p&gt;Stephen had posted a link to his &lt;a href=&quot;https://www.tinkercad.com/things/6cVLKjO38uJ-intel-nuc-disk-and-ethernet-base&quot;&gt;3D model&lt;/a&gt;, so that is what I started with. Unfortunately, the design was only available as an STL file, which could not be modified to match my own NUC model. His custom base was also meant to house a 2.5” drive, something I didn’t want or need. Luckily, a chap called David Johnston had already remixed Stephen’s design and published it in Parametric OpenSCAD format on &lt;a href=&quot;http://www.thingiverse.com/thing:999900&quot;&gt;Thingverse&lt;/a&gt;, ready to be modified. I just had to learn a bit about OpenSCAD.&lt;/p&gt;

&lt;p&gt;Without further ado, I present to you the NUC Squarepants design:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/nuc_squarepants.png&quot; alt=&quot;NUC Squarepants&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OK, it doesn’t look quite like that. We will see how it really looks like in a while, but first, here is the shopping list.&lt;/p&gt;

&lt;h3 id=&quot;components&quot;&gt;Components&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Intel NUC 3&lt;sup&gt;rd&lt;/sup&gt; or 4&lt;sup&gt;th&lt;/sup&gt; generation (with mPCIe/mSATA)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.co.uk/dp/B00B524102/ref=cm_cr_ryp_prd_ttl_sol_0&quot;&gt;Syba Mini PCI-E Gigabit Ethernet Card&lt;/a&gt; &lt;strong&gt;or&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.co.uk/dp/B006VCPB2S/ref=cm_cr_ryp_prd_ttl_sol_5&quot;&gt;Startech Mini PCI Express Gigabit Ethernet Network Adapter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.co.uk/dp/B00T2FP7X4/ref=cm_cr_ryp_prd_ttl_sol_3&quot;&gt;Mini PCI Express Extender&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gomesjj/nuc-smartpants/blob/master/nuc_box_ver3.scad&quot;&gt;Modified SCAD file for the 3D base&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The StarTech adapter costs twice as much as the Syba. I bought both and would say the Syba is a better bet, as the performance is identical (both are based on the Realtek R8111 chipset).&lt;/p&gt;

&lt;p&gt;This is what the Syba and StarTech adapters look like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/syba.png&quot; alt=&quot;Syba mPCIe Adapter&quot; /&gt; &lt;img src=&quot;/images/nuc/startech.png&quot; alt=&quot;Syba mPCIe Adapter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And this is the mPCIe extender:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/mpcie_extender.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; The small board on the left is connected to the mPCIe interface in the motherboard.&lt;/p&gt;

&lt;h3 id=&quot;putting-it-all-together&quot;&gt;Putting it all together&lt;/h3&gt;

&lt;p&gt;1. Remove the bracket from the Ethernet adapter, disconnect the cables and fix the RJ45 daughterboard to the custom base.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/2_nuc_base_phy.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2. Connect the extender to the lower slot on the motherboard (the top one is mSATA). There are perforated lines in the PCB marking where to snap it according to the required length.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/1_nuc_board_adapter.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3. Fix the second half of the extender (with the mPCIe connector) to the custom base.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/3_nuc_base_adap.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4. Plug the main board of the Ethernet adapter to the extender in the custom base:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/4_nuc_base_eth.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5. The custom base should look like this once all the cables are connected:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/5_nuc_base_complete.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6. Connect the flat ribbon between the base and the main board:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/6_nuc_base_board.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The flat ribbon is tucked away slightly to clear the stand-off for the mSATA adapter&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/6a_ribbon_detail.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7. Carefully loop the flat ribbon and attach the custom base to the NUC. The base was designed with long screw posts to accommodate the original screws. Et voilà, the real NUC Squarepants:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/7_nuc_complete.png&quot; alt=&quot;Syba mPCIe Adapter&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we now have a NUC with a new pair of pants large enough to accommodate it’s extra  package. Oo-er missus!&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;&lt;strong&gt;I know, I know. That is not a pair of pants, the base is not really square and there is no tie… but I like the name NUC Squarepants. I must be going senile.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;making-it-all-work&quot;&gt;Making it all work&lt;/h3&gt;

&lt;p&gt;There is no out-of-the-box support for Realtek adapters on ESXi, so a driver will need to be installed. I will just point you in the direction of the excellent &lt;a href=&quot;https://vibsdepot.v-front.de/wiki/index.php/List_of_currently_available_ESXi_packages&quot;&gt;VIBSDepot&lt;/a&gt; – just grab the &lt;code class=&quot;highlighter-rouge&quot;&gt;net55-r8168&lt;/code&gt; VIB and you should be sorted.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are not running ESXi 6.0 or 5.5 Update 3, you will also need a driver for the on-board Intel NIC. You need the &lt;code class=&quot;highlighter-rouge&quot;&gt;net-e1000e&lt;/code&gt; VIB, so get it too whilst you are at it.&lt;/p&gt;

&lt;h3 id=&quot;ether-device-details&quot;&gt;Ether device details&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/mpcie_rtl_8111.png&quot; alt=&quot;Physical adapters&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/getnics.png&quot; alt=&quot;getnics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, only &lt;em&gt;rx-checksuming&lt;/em&gt; is enable for this driver; there is no way to set &lt;em&gt;tx-checksuming&lt;/em&gt;, &lt;em&gt;sc&lt;/em&gt; and &lt;em&gt;tso&lt;/em&gt;, but the driver throughput is on a par with the Intel onboard NIC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nuc/ethtool.png&quot; alt=&quot;ethtool&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;later-generation-nucs&quot;&gt;Later generation NUCs&lt;/h3&gt;

&lt;p&gt;This solution does not work for the 5&lt;sup&gt;th&lt;/sup&gt; and later generation NUCs, as the mPCIe slot has been replaced by an M.2 slot. If you don’t mind running with a NIC outside the NUC case and a second power adapter, then Florian’s &lt;a href=&quot;http://blog.fosketts.net/2015/06/05/adding-a-second-ethernet-port-to-an-intel-nuc-via-mini-pcie/&quot;&gt;solution&lt;/a&gt; is an option. Otherwise, come along this &lt;a href=&quot;/Homelab/Want-a-USB-Ethernet-driver-for-ESXi-You-can-have-two/&quot;&gt;way&lt;/a&gt; for a solution that will work on all generations of the NUC (or anything else with a USB port).&lt;/p&gt;</content><category term="[&quot;Homelab&quot;]" /><category term="Homelab" /><category term="Virtualisation" /><category term="NUC" /><summary>My first Intel NUC was yet to be delivered, but I was already looking around for a solution for it’s greatest shortcoming: the single Ethernet adapter. So, here is how my first attempt at solving that went.</summary></entry><entry><title>iTunes Media Folder on NFS share</title><link href="/apple/iTunes-Library-on-NFS-share/" rel="alternate" type="text/html" title="iTunes Media Folder on NFS share" /><published>2016-05-01T00:00:00+01:00</published><updated>2016-05-01T00:00:00+01:00</updated><id>/apple/iTunes-Library-on-NFS-share</id><content type="html" xml:base="/apple/iTunes-Library-on-NFS-share/">&lt;p&gt;Mine is a Mac household and as such, iTunes plays a part on our entertainment strategy. I generally like Apple products and software, but I must confess iTunes is not one of my preferred offerings from them.&lt;/p&gt;

&lt;p&gt;I thought it would be a good idea to have a single repository for all the iTunes Library items residing on the NAS. By the way, the setup I have at the moment is based on two custom built FreeNAS 9.3 servers, but in the past it was based on Solaris 11 (then 11.2) running on a Sun Fire X4240. You can see what my current home lab looked like &lt;a href=&quot;/The-Home-Lab/&quot;&gt;here&lt;/a&gt; – I will be documenting the new setup soon.&lt;/p&gt;

&lt;h3 id=&quot;all-those-funny-characters&quot;&gt;All those funny characters&lt;/h3&gt;

&lt;p&gt;The reason I chose Solaris and later FreeNAS was simply because I wanted all the ZFS goodness. With ZFS, not only did I get top availability, but both NFS and SMB sharing are baked straight into the file system. Setting up a new ZFS file system and sharing it at the same time is a doodle – except the first attempt turned into tragedy. I do have an extensive music library that includes music from all over the world. Whilst it was easy to move everything onto the NFS share, what I forgot to account for was the non-ASCII characters… As soon as I tried to access albums or songs that had, say, accented characters the whole house of cards fell apart.&lt;/p&gt;

&lt;p&gt;What I needed was UTF 8 support. Not only that, but UTF 8 support that was compatible with the Unicode normalisation adopted by Apple, which is NFD. This is not something that can be changed once a ZFS file system is created, so I had to destroy the file system and recreate like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zfs create -o &lt;span class=&quot;nv&quot;&gt;normalization&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;formD -o &lt;span class=&quot;nv&quot;&gt;casesensitivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mixed -o &lt;span class=&quot;nv&quot;&gt;nfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-o &lt;span class=&quot;nv&quot;&gt;aclinherit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;passthrough-x -o &lt;span class=&quot;nv&quot;&gt;aclmode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;passthrough -o &lt;span class=&quot;nv&quot;&gt;compression&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on -o &lt;span class=&quot;nv&quot;&gt;utf8only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on tank/media 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, lets forward on a few years and see if the same had to be done on FreeNAS. It turns out it didn’t. Instead, what I did was to change the “charset” and “lang” login options to support UTF 8. To do that, as root, edit &lt;em&gt;/etc/login.conf&lt;/em&gt; and add the following lines to the &lt;em&gt;default:&lt;/em&gt; stanza after the &lt;em&gt;umask&lt;/em&gt; entry:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;charset&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;UTF&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;en_GB&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;UTF&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Save the file, then run the following commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cap_mkdb /etc/login.conf
cp /etc/login.conf.db /conf/base/etc
cp /etc/login.conf /conf/base/etc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I suppose I could have done the same with Solaris and just set the &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;lang&lt;/em&gt; to UTF 8, but hey.&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; Don’t try to add directories or files with UTF 8 characters directly from the command line – use the Finder instead and all will be peachy.&lt;/p&gt;

&lt;h3 id=&quot;automount-is-your-friend&quot;&gt;Automount is your friend&lt;/h3&gt;

&lt;p&gt;With my NFS share in place, I then had to look at the best way to make it available at boot time. If you look around t’interwebs, the default solution is to use the “Connect to Server” dialog in the Finder. That is not very elegant and in my experience does not survive a reboot. Well, you can add the driver to your “Login Items”, but that is even uglier. Instead, I opted for an &lt;code class=&quot;highlighter-rouge&quot;&gt;automount&lt;/code&gt; map. The great thing about Mac OS X is that it is still BSD at heart, and the tools are all there.&lt;/p&gt;

&lt;p&gt;So, start by creating your auto mount map, as root, using you preferred editor (I am a &lt;code class=&quot;highlighter-rouge&quot;&gt;vi&lt;/code&gt; man):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
/Media -fstype=nfs,rw,bg,tcp,rsize=32768,wsize=32768,resvport,intr,nolocks,locallocks ip_address_or_hostname:/mnt/tank/media

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I normally use the IP address so that it doesn’t depend on DNS resolution, but you can choose otherwise. In this case, my ZFS share is called &lt;strong&gt;media&lt;/strong&gt; and I am mounting it under a folder called &lt;strong&gt;/Media&lt;/strong&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Do not create the mount point directory (&lt;strong&gt;/Media&lt;/strong&gt; in this case). The directory will be created automatically on first mount.&lt;/p&gt;

&lt;p&gt;Next, add your newly created map as the last item on &lt;strong&gt;/etc/auto_master&lt;/strong&gt;, also as root:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;			auto_nas	&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;nosuid
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You are now ready to mount your NFS share, by executing the following command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo automount -vc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;That is it. If your handy work is correct the NFS share should be mounted under &lt;strong&gt;/Volumes/Media&lt;/strong&gt; and ready to go.&lt;/p&gt;

&lt;h3 id=&quot;point-itunes-to-the-new-media-folder-location&quot;&gt;Point iTunes to the new media folder location&lt;/h3&gt;

&lt;p&gt;The last thing to do is to set the iTunes Media folder location to point at the NFS share. Click on iTunes –&amp;gt; Preferences –&amp;gt; Advanced –&amp;gt; Change… and set the the media folder location:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/itunes_media_folder.png&quot; alt=&quot;iTunes Preferences&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;thats-it&quot;&gt;That’s it&lt;/h3&gt;

&lt;p&gt;Now, this is not quite a single iTunes Library for everybody, but it is the next best thing.&lt;/p&gt;

&lt;p&gt;I tried removing the “iTunes Music Library.xml” file from the local computers and having a single instance on the NAS, but that doesn’t work well long term. What it means is that if a new item is added to my library it will not be automatically added to my wife’s library – that needs to be done manually. On the other hand, I actually prefer this setup, as I don’t necessarily want some of my wife’s music on my library anyway… 😉&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;If you are NFS mounting your media library on a laptop and are out and about, the contents will not be accessible. If you want to have your media on the go you need to store your files locally. Or ran a VPN, as I do.&lt;/p&gt;</content><category term="[&quot;Apple&quot;]" /><category term="Mac" /><category term="OS X" /><category term="iTunes" /><category term="NFS" /><category term="NAS" /><summary>Mine is a Mac household and as such, iTunes plays a part on our entertainment strategy. I generally like Apple products and software, but I must confess iTunes is not one of my preferred offerings from them.</summary></entry><entry><title>Intel NUC to the rescue</title><link href="/homelab/Intel-NUC-to-the-rescue/" rel="alternate" type="text/html" title="Intel NUC to the rescue" /><published>2016-04-13T00:00:00+01:00</published><updated>2016-04-13T00:00:00+01:00</updated><id>/homelab/Intel-NUC-to-the-rescue</id><content type="html" xml:base="/homelab/Intel-NUC-to-the-rescue/">&lt;p&gt;The components of my home lab changed many times over the years, but lately I embarked on a different approach: I wanted to come up with a design that kept the power consumption to a minimum. Spending thousands of £ per year on the electricity bill started to upset the &lt;abbr title=&quot;Good Lady Wife&quot;&gt;GLW&lt;/abbr&gt;. The green credentials of my lab were also generally lacking.&lt;/p&gt;

&lt;p&gt;I talked about my current set-up in this &lt;a href=&quot;/The-Home-Lab/&quot;&gt;post&lt;/a&gt;. Some of my servers are quite old now (still serviceable, though), so it is understandable that the power requirements are high. The IBM POWER5 p505 server, in particular, slurps electricity as if there was no tomorrow.&lt;/p&gt;

&lt;p&gt;So, I deployed my search-fu skills and came to the conclusion that I had two options: build something based on the Intel Avoton (Atom C2000 series) or go with the Intel NUC. I also looked briefly at the Mac Mini, but the latest models with soldered on memory didn’t appeal to me. In the end, I plumped for both an Avoton self-build based around the &lt;a href=&quot;https://www.supermicro.com/products/motherboard/ATOM/X10/A1SAi-2750F.cfm&quot;&gt;Supermicro A1SAi-2750F&lt;/a&gt; and an Intel NUC &lt;a href=&quot;http://www.intel.co.uk/content/www/uk/en/nuc/nuc-kit-dc53427hye-board-d53427rke.html&quot;&gt;DC53427HYEA&lt;/a&gt; to try them out.&lt;/p&gt;

&lt;p&gt;The Atom C2750 eight-core is a small beast: enough grunt to play the ESXi game, but with a wallet friend 20W &lt;abbr title=&quot;Thermal Design Power&quot;&gt;TDP&lt;/abbr&gt;. On the other hand, the NUC I chose, albeit third generation, was also pretty decent (17W &lt;abbr title=&quot;Thermal Design Power&quot;&gt;TDP&lt;/abbr&gt;). The downside? Maximum 16GB of RAM and a single Ethernet adapter.&lt;/p&gt;

&lt;p&gt;In the end, I decided to buy three more NUCs (another DC53427HYEA and two &lt;a href=&quot;http://www.intel.co.uk/content/www/uk/en/nuc/nuc-kit-nuc5i5ryh.html&quot;&gt;NUC5i5RYH&lt;/a&gt;) to power my minuscule VMware cluster. One of the reasons was aesthetics: I just wanted the smallest possible footprint for the lab; and the other was the challenge of coming up with a way to add a second NIC to the little beauties. 😎&lt;/p&gt;

&lt;p&gt;“What about the Atom Board?” you might ask. Well, I decided to build a FreeNAS server with that. I will be elaborating on my NAS set-up in another post sometime. Meanwhile, you can see how I resolved the issue of the single Ethernet adapter in the NUC in this &lt;a href=&quot;/Homelab/NUC-Squarepants/&quot;&gt;post&lt;/a&gt; and &lt;a href=&quot;/Homelab/Want-a-USB-Ethernet-driver-for-ESXi-You-can-have-two/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;</content><category term="[&quot;Homelab&quot;]" /><category term="Homelab" /><category term="Virtualisation" /><category term="Avoton" /><category term="NUC" /><summary>The components of my home lab changed many times over the years, but lately I embarked on a different approach: I wanted to come up with a design that kept the power consumption to a minimum. Spending thousands of £ per year on the electricity bill started to upset the GLW. The green credentials of my lab were also generally lacking.</summary></entry><entry><title>The Home Lab</title><link href="/homelab/The-Home-Lab/" rel="alternate" type="text/html" title="The Home Lab" /><published>2016-03-27T00:00:00+00:00</published><updated>2016-03-27T00:00:00+00:00</updated><id>/homelab/The-Home-Lab</id><content type="html" xml:base="/homelab/The-Home-Lab/">&lt;p&gt;Like most technical people I have a home lab. Actually, I’ve had one for many years now and the lab became even more important once I moved from engineering roles to become a paper pusher (Architect). You see, I really like keeping up with the latest technologies, and more importantly, keep the skills up-to-date.&lt;/p&gt;

&lt;p&gt;When we first moved into this house (10 years ago) I took the opportunity to lift the floor boards – suspended floors here in the UK – and run CAT5 and Coaxial all over. The cable runs terminated at the first floor, inside an airing cupboard (That is where the BT master socket was. Don’t ask!). Due to the limited space, I installed a &lt;a href=&quot;http://www.minitran.co.uk/pages/products/list.mhtml?ct=31&amp;amp;sc=107&quot;&gt;Minitran 10” inch 6U rack&lt;/a&gt; complete with 2 x patch panels, 1 x Voice Panel, 2 x Power Distribution units and 1 x Compact Ethernet Switch. The switch was the first one to go soon after, as it was only a 10/100 job.&lt;/p&gt;

&lt;p&gt;The servers were all racked up in the loft, which worked great in winter, but not too well in summer (yes, we do have summers in England). So I got myself a Cisco SG300-10 linked via OM2 fibre to a Cisco SG200-18 in the garage and moved all the servers there. In the process, I bought an 
Aiino ClusterMaster 12U rack to house the servers. This rack is superb – originally designed for the Apple Xserve and Xserve RAID it includes 4 large fans in the back, a 9 x connector power strip and plenty of sound proofing to keep things quiet:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/aiino-clustermaster.png&quot; alt=&quot;Aiino ClusterMster&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Aiino rack houses the following kit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cisco SG200-18&lt;/li&gt;
  &lt;li&gt;NEC Express5800/R120a-1 (ESXi server)
    &lt;ul&gt;
      &lt;li&gt;2 x Intel Xeon E5504 @ 2GHz&lt;/li&gt;
      &lt;li&gt;32GB RAM&lt;/li&gt;
      &lt;li&gt;3 x SAS/SATA 3.5” drives&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NEC Express5800/R120a-2 (Windows Server 2012 Hyper-V host)
    &lt;ul&gt;
      &lt;li&gt;1 x Intel Xeon E5504 @ 2GHz&lt;/li&gt;
      &lt;li&gt;20GB RAM&lt;/li&gt;
      &lt;li&gt;6 x SAS/SATA 2.5” drives&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sun Fire X4240 (Solaris 11.2 NAS)
    &lt;ul&gt;
      &lt;li&gt;2 x Quad-Core AMD Opteron Processor 2380 @ 2.5GHz&lt;/li&gt;
      &lt;li&gt;40GB RAM&lt;/li&gt;
      &lt;li&gt;16 x SAS/SATA 2.5” drives&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Dell R210 PowerEdge server (Windows 2012 Domain Controller)
    &lt;ul&gt;
      &lt;li&gt;Dual Core Xeon @1.2GHZ&lt;/li&gt;
      &lt;li&gt;10GB RAM&lt;/li&gt;
      &lt;li&gt;2 x SATA 3.5” drives&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IBM pSeries POWE5 9115-505 (PowerVM host)
    &lt;ul&gt;
      &lt;li&gt;1-core @ 1.9GHz&lt;/li&gt;
      &lt;li&gt;16GB RAM&lt;/li&gt;
      &lt;li&gt;2 x DASD 3.5” drives&lt;/li&gt;
      &lt;li&gt;HMC 7.7.4 running as a VM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Connection to the  Internet (BT Infinity FTTC) is handled by a Cisco 887VA router. Great piece of kit providing both IPSEC and SSL VPN, as well as better throughput than the standard BT modem. Wi-Fi is taken care of by an Apple Airport Extreme base station and a handful of Apple Airport Express bases around the house.&lt;/p&gt;

&lt;h2 id=&quot;meet-the-chief-architect&quot;&gt;Meet the Chief Architect&lt;/h2&gt;

&lt;p&gt;No changes to the Home Lab will happen without approval from the Chief Architect!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chief_architect.png&quot; alt=&quot;Chief Architect&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;</content><category term="[&quot;Homelab&quot;]" /><category term="Homelab" /><category term="Education" /><category term="Virtualisation" /><category term="NAS" /><summary>Like most technical people I have a home lab. Actually, I’ve had one for many years now and the lab became even more important once I moved from engineering roles to become a paper pusher (Architect). You see, I really like keeping up with the latest technologies, and more importantly, keep the skills up-to-date.</summary></entry><entry><title>Why blog?</title><link href="/Why-blog/" rel="alternate" type="text/html" title="Why blog?" /><published>2016-03-25T00:00:00+00:00</published><updated>2016-03-25T00:00:00+00:00</updated><id>/Why-blog</id><content type="html" xml:base="/Why-blog/">&lt;p&gt;Until just a few days ago I had no presence online whatsoever. I have always been more of a lurker, avidly reading other people’s blogs and generally have scoured the Interwebs for bits of information to help me along whatever little project I am embarking on.&lt;/p&gt;

&lt;p&gt;One such project I undertook recently was to get a USB Ethernet driver working on ESXi (ended up with two). Like most things I do on my spare time this project involved something I had no previous experience of.&lt;/p&gt;

&lt;p&gt;What is the importance of the above? I am always doing this sort of things (mostly successfully), but I never bothered sharing the results with anyone. What is worse, I see myself looking back at the many things I have done in the past or the issues I have had, and thinking: Why didn’t I document it properly or blog about it? This is not an ego thing, but maybe, just maybe, such sharing could be useful to someone looking for just that little help… So I have decided to finally setup my own blog and learn something new as I go along (Jekyll, Markdown, Liquid, et al.). I am not sure I will be able to blog on a regular basis – only so many hours in a day – but I will try to write at least one post per month. Lets’ see.&lt;/p&gt;

&lt;p&gt;These blog posts will be more or less an aide-mémoire for myself, but might be of help to you. You might even help me with your comments.&lt;/p&gt;</content><summary>Until just a few days ago I had no presence online whatsoever. I have always been more of a lurker, avidly reading other people’s blogs and generally have scoured the Interwebs for bits of information to help me along whatever little project I am embarking on.</summary></entry></feed>
